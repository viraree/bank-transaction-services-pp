{
  "openapi": "3.0.0",
  "info": {
    "title": "Bank Transaction API",
    "description": "Bank Transaction API",
    "contact": {
      "email": "viraree@sina.com"
    },
    "license": {
      "name": "Apache 2.0",
      "url": "http://www.apache.org/licenses/LICENSE-2.0.html"
    },
    "version": "1.0.0"
  },
  "servers": [
    {
      "url": "https://virtserver.swaggerhub.com/VIRAREE_1/BankTransaction/1.0.0",
      "description": "SwaggerHub API Auto Mocking"
    },
    {
      "url": "https://virtserver.swaggerhub.com/VIRAREE_1/bank-data-transaction/1.0.0",
      "description": "SwaggerHub API Auto Mocking"
    },
    {
      "url": "https://virtserver.swaggerhub.com/VIRAREE_1/bank-data-hello/1.0.0",
      "description": "SwaggerHub API Auto Mocking"
    }
  ],
  "tags": [
    {
      "name": "admins",
      "description": "Secured Admin-only calls"
    },
    {
      "name": "developers",
      "description": "Operations available to regular developers"
    }
  ],
  "paths": {
    "/": {
      "get": {
        "tags": [
          "developers"
        ],
        "summary": "gets hello message",
        "description": "You can get hello in the system\n",
        "operationId": "getHello",
        "responses": {
          "200": {
            "description": "ok",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "400": {
            "description": "bad input parameter"
          }
        }
      }
    },
    "/api": {
      "get": {
        "tags": [
          "developers"
        ],
        "summary": "searches transaction",
        "description": "By passing in the appropriate options, you can search for\navailable transaction in the system\n",
        "operationId": "searchTransaction",
        "parameters": [
          {
            "name": "searchString",
            "in": "query",
            "description": "pass an optional search string for looking up transaction dataset",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "skip",
            "in": "query",
            "description": "number of records to skip for pagination",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "minimum": 0,
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "description": "maximum number of records to return",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "maximum": 50,
              "minimum": 0,
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "search results matching criteria",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Transaction"
                  }
                }
              }
            }
          },
          "400": {
            "description": "bad input parameter"
          }
        }
      },
      "post": {
        "tags": [
          "admins"
        ],
        "summary": "adds an transaction record",
        "description": "Adds an transaction record to the system",
        "operationId": "addTransaction",
        "requestBody": {
          "description": "transaction record to add",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Transaction"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "record created"
          },
          "400": {
            "description": "invalid input, object invalid"
          },
          "409": {
            "description": "an existing record already exists"
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "User": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int64"
          },
          "uid": {
            "type": "string",
            "example": "P-0123456789"
          },
          "full_name": {
            "type": "string",
            "example": "Peter Russells"
          },
          "home_address": {
            "type": "string",
            "example": "123 Sunset Avenue"
          },
          "phone": {
            "type": "string",
            "example": "408-867-5309"
          }
        }
      },
      "Transaction": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int64"
          },
          "user_uid": {
            "type": "string",
            "example": "P-0123456789"
          },
          "uid": {
            "type": "string",
            "example": "89d3o179-abcd-465b-o9ee-e2d5f6ofEld46"
          },
          "currency_amount": {
            "type": "string",
            "example": "CHF 75"
          },
          "eur_amount": {
            "type": "number",
            "example": 77.78
          },
          "debit_credit": {
            "type": "integer",
            "example": -1
          },
          "value_date": {
            "type": "string",
            "format": "date-time"
          },
          "month_num": {
            "type": "integer",
            "example": 1
          },
          "description": {
            "type": "string",
            "example": "Online payment CHF"
          },
          "User": {
            "$ref": "#/components/schemas/User"
          }
        }
      },
      "Account": {
        "properties": {
          "id": {
            "type": "integer",
            "format": "int6"
          },
          "User": {
            "$ref": "#/components/schemas/User"
          },
          "Balance": {
            "type": "number"
          },
          "Currency": {
            "type": "string"
          }
        }
      },
      "Str": {
        "type": "string"
      }
    }
  }
}